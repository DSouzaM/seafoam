begin_compilation
  name " HotSpotCompilation-1071[JavaExamples.examplePartialEscape(boolean, int)]"
  method "HotSpotCompilation-1071[JavaExamples.examplePartialEscape(boolean, int)]"
  date 1612307469882
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v41 v18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i6 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 9]
stamp: void
trueSuccessorProbability: 0.49958675290037263
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:140) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:140) [bci: 23]
stamp: void
=== Inputs ===
result: i2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@6cc6767c
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j49 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j49  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j205 
=== Usages ===
v270 v271 
=== Predecessor ===
v227 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j205  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j49 
index: - 
=== Succesors ===
=== Usages ===
j205 v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
=== Succesors ===
next: j206 
=== Usages ===
j247 v272 v273 v280 a100 v274 v275 v277 v278 v279 
=== Predecessor ===
j49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - #next: j206  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j49 
index: - 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
v61 
=== Predecessor ===
j205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v271 lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] â‡Š0000000000000018 â‡ˆ0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j205 
y: j149 
=== Succesors ===
=== Usages ===
v61 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j205 y: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j206 
y: j247 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j206 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 a102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
j206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v66 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.examplePartialEscape(boolean, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 135
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v266 a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v45 i38 
=== Succesors ===
next: v266 
=== Usages ===
v266 a111 
=== Predecessor ===
v66 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v45 i38 #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-27489|0xffffffffffff949f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a102 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a102 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
value: j247 
stateAfter: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - value: j247 stateAfter: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v277 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v277 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v278 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v278 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v279 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v279 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v280 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v280 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v272 
lastLocationAccess: - 
value: i38 
stateAfter: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v272 lastLocationAccess: - value: i38 stateAfter: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v273 
lastLocationAccess: - 
value: j46 
stateAfter: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v273 lastLocationAccess: - value: j46 stateAfter: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
lastLocationAccess: - 
value: v246 
stateAfter: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v275 lastLocationAccess: - value: v246 stateAfter: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v274 
lastLocationAccess: - 
value: j74 
stateAfter: - 
=== Succesors ===
next: a100 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v274 lastLocationAccess: - value: j74 stateAfter: - #next: a100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j205 
=== Succesors ===
next: v108 
=== Usages ===
a111 
=== Predecessor ===
v213 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j205 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
a100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v109 
values: a100 a102 
=== Succesors ===
=== Usages ===
v269 a42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: a100 a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v108 v110 
=== Succesors ===
next: v41 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v108 v110 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: i2 stateAfter: - #next: v43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a42 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a111 
=== Succesors ===
next: v229 
=== Usages ===
a24 v268 
=== Predecessor ===
v43 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a111 #next: v229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a42 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 j233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
op: Compress
stamp: n!#[ [I
=== Inputs ===
value: a42 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: a24 
stateAfter: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: a24 stateAfter: - #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@27b2f2fd
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j233 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a23 
=== Succesors ===
next: v240 
=== Usages ===
j235 
=== Predecessor ===
v243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a23 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j233 
y: i234 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j233 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] â‡Š000000010cb56000 â‡ˆ000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: j238 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: j238  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v276 
lastLocationAccess: - 
value: i241 
stateAfter: - 
=== Succesors ===
next: i264 
=== Usages ===
=== Predecessor ===
j233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v276 lastLocationAccess: - value: i241 stateAfter: - #next: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a42 
index: - 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:138) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v268 lastLocationAccess: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:138) [bci: 19]
stamp: void
=== Inputs ===
result: i264 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i264 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i264 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v41 v18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i6 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 9]
stamp: void
trueSuccessorProbability: 0.49958675290037263
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:140) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:140) [bci: 23]
stamp: void
=== Inputs ===
result: i2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@6cc6767c
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j49 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j49  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j49 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j205 
=== Usages ===
v270 v271 
=== Predecessor ===
v227 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j205  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j49 
index: - 
=== Succesors ===
=== Usages ===
j205 v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j205 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
=== Succesors ===
next: j206 
=== Usages ===
j247 v272 v273 v280 a100 v274 v275 v277 v278 v279 
=== Predecessor ===
j49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - #next: j206  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j49 
index: - 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
v61 
=== Predecessor ===
j205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v271 lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] â‡Š0000000000000018 â‡ˆ0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j205 
y: j149 
=== Succesors ===
=== Usages ===
v61 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j205 y: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j206 
y: j247 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j206 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 a102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e437bace <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
j206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v66 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.examplePartialEscape(boolean, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 135
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v266 a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v45 i38 
=== Succesors ===
next: v266 
=== Usages ===
v266 a111 
=== Predecessor ===
v66 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v45 i38 #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-27489|0xffffffffffff949f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a102 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a102 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
value: j247 
stateAfter: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - value: j247 stateAfter: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v277 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v277 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
result [v2|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v278 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v278 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
result [v2|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v279 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v279 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
result [v2|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v280 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v280 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
result [v2|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v272 
lastLocationAccess: - 
value: i38 
stateAfter: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v272 lastLocationAccess: - value: i38 stateAfter: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v273 
lastLocationAccess: - 
value: j46 
stateAfter: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v273 lastLocationAccess: - value: j46 stateAfter: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
result [v2|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
lastLocationAccess: - 
value: v246 
stateAfter: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v275 lastLocationAccess: - value: v246 stateAfter: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
result [v2|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v274 
lastLocationAccess: - 
value: j74 
stateAfter: - 
=== Succesors ===
next: a100 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v274 lastLocationAccess: - value: j74 stateAfter: - #next: a100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a100 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j205 
=== Succesors ===
next: v108 
=== Usages ===
a111 
=== Predecessor ===
v213 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j205 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
a100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v109 
values: a100 a102 
=== Succesors ===
=== Usages ===
v269 a42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: a100 a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v108 v110 
=== Succesors ===
next: v41 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v108 v110 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: i2 stateAfter: - #next: v43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a42 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a42 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a111 
=== Succesors ===
next: v229 
=== Usages ===
a24 v268 
=== Predecessor ===
v43 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a111 #next: v229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a42 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 j233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v8|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
op: Compress
stamp: n!#[ [I
=== Inputs ===
value: a42 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: a24 
stateAfter: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: a24 stateAfter: - #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@27b2f2fd
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j233 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j233 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a23 
=== Succesors ===
next: v240 
=== Usages ===
j235 
=== Predecessor ===
v243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a23 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j233 
y: i234 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j233 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] â‡Š000000010cb56000 â‡ˆ000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
result [v10|QWORD[*] + v11|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: j238 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: j238  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.examplePartialEscape(JavaExamples.java:137) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v276 
lastLocationAccess: - 
value: i241 
stateAfter: - 
=== Succesors ===
next: i264 
=== Usages ===
=== Predecessor ===
j233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v276 lastLocationAccess: - value: i241 stateAfter: - #next: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a42 
index: - 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i264 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:138) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v268 lastLocationAccess: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:138) [bci: 19]
stamp: void
=== Inputs ===
result: i264 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i264 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i264 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[64, 66[[70, 72[[82, 84[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[80, 82[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[78, 82[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 20[[74, 87[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 46[[68, 70[[74, 90[8 MustHaveRegister 46 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [14, 40[14 MustHaveRegister 16 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [84, 89[84 MustHaveRegister 86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [40, 43[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [44, 62[46 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [48, 56[48 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v7|q [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|q [56, 60[56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[64, 66[[70, 72[[82, 84[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[80, 82[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[78, 82[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 20[[74, 87[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 46[[68, 70[[74, 90[8 MustHaveRegister 46 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [14, 40[14 MustHaveRegister 16 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [84, 89[84 MustHaveRegister 86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [40, 43[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [44, 62[46 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [48, 56[48 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [56, 60[56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[64, 66[[70, 72[[82, 84[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[80, 82[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[78, 82[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 20[[74, 87[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 46[[68, 70[[74, 90[8 MustHaveRegister 46 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [14, 40[14 MustHaveRegister 16 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [84, 89[84 MustHaveRegister 86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [40, 43[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [44, 62[46 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [48, 56[48 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [56, 60[56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[64, 66[[70, 72[[82, 84[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[80, 82[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[78, 82[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 20[[74, 87[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 46[[68, 70[[74, 90[8 MustHaveRegister 46 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [14, 40[14 MustHaveRegister 16 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [84, 89[84 MustHaveRegister 86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [40, 43[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [44, 62[46 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [48, 56[48 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [56, 60[56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction v11|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602596117134055722
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4602682541371614700
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   50  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   54  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   60  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602671374774711337
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4572419394091395953
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #58         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6448bda4585d20f8494000000498b4760488d7018493b77700f8798000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008addeadde48c74010000000004489581048beaddeaddeaddeadde488bd048c1ea03895674f08304240048c1ee0948ba0060b50c01000000c60416008b4010488b6c24104883c418850500000000c5f877c3418bc3488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba01000000e800000000908500eb8c41c787f40200009f94ffff49c7870003000000000000e800000000906690e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 31 block B2 null  <||@
  Comment 31 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 14 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 16 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 18 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 49 block B4 null  <||@
  Comment 49 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 22 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 24 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 60 26 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 67 28 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 74 30 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 81 32 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 88 34 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 95 36 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 95 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 102 38 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 110 40 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 110 42 JUMP ~[] destination: B4 -> B5  <||@
  Comment 110 block B5 null  <||@
  Comment 110 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 46 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 114 48 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 114 {Object[Class:JavaExamples]}  <||@
  Comment 124 50 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3  <||@
  Comment 131 52 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 134 54 MEMBAR barriers: 4  <||@
  Comment 139 56 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 58 rdx|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 153 60 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 157 62 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 160 66 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 169 POLL_RETURN_NEAR  <||@
  Comment 179 block B1 null  <||@
  Comment 179 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 70 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 182 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 191 POLL_RETURN_NEAR  <||@
  Comment 201 block B3 null  <||@
  Comment 201 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 76 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 201 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 211 80 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 216 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 221 []at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 86 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 222 [rax:0]at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 224 88 JUMP ~[] destination: B3 -> B5  <||@
  Comment 248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 253 [rax:0]at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 256 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 262 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1071[JavaExamples.examplePartialEscape(boolean, int)]"
  method "HotSpotCompilation-1071[JavaExamples.examplePartialEscape(boolean, int)]"
  date 1612307469978
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11830bf60 89842400c0feff4883ec1848896c2410448bd6448bda4585d20f8494000000498b4760488d7018493b77700f8798000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c740086d0100f848c74010000000004489581048beb0da02c005000000488bd048c1ea03895674f08304240048c1ee0948ba0060b50c01000000c60416008b4010488b6c24104883c4188505f74f4cf0c5f877c3418bc3488b6c24104883c4188505e14f4cf0c5f877c348be680b00c007000000ba01000000e8635cbcff908500eb8c41c787f40200009f94ffff49c7870003000000000000e8e1f228ff906690e8bba36cff90e8d5f128ff90f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bc5051e slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.49958675290037263 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 31 block B2 null  <||@
  Comment 31 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 14 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 16 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 18 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 49 block B4 null  <||@
  Comment 49 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 22 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 24 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 60 26 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 67 28 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 74 30 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 81 32 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 88 34 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 95 36 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 95 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 102 38 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 110 40 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 110 42 JUMP ~[] destination: B4 -> B5  <||@
  Comment 110 block B5 null  <||@
  Comment 110 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 46 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 114 48 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 114 {Object[Class:JavaExamples]}  <||@
  Comment 124 50 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@e197530 encoding: base: 0 shift: 3  <||@
  Comment 131 52 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 134 54 MEMBAR barriers: 4  <||@
  Comment 139 56 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 58 rdx|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 153 60 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 157 62 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 160 66 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 169 POLL_RETURN_NEAR  <||@
  Comment 179 block B1 null  <||@
  Comment 179 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 70 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 182 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 191 POLL_RETURN_NEAR  <||@
  Comment 201 block B3 null  <||@
  Comment 201 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 76 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 201 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 211 80 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 216 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 221 []at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 86 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 222 [rax:0]at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 224 88 JUMP ~[] destination: B3 -> B5  <||@
  Comment 248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 253 [rax:0]at JavaExamples.examplePartialEscape(JavaExamples.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 256 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 262 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
