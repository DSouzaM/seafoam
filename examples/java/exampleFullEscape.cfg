begin_compilation
  name " HotSpotCompilation-134[JavaExamples.exampleFullEscape(int)]"
  method "HotSpotCompilation-134[JavaExamples.exampleFullEscape(int)]"
  date 1612307469460
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@17f98d53
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j42 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j42 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j198 
=== Usages ===
v263 v264 
=== Predecessor ===
v220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j198  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j42 
index: - 
=== Succesors ===
=== Usages ===
j198 v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
=== Succesors ===
next: j199 
=== Usages ===
j240 v265 v266 v273 a93 v267 v268 v270 v271 v272 
=== Predecessor ===
j42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - #next: j199  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j42 
index: - 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
v54 
=== Predecessor ===
j198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j198 
y: j142 
=== Succesors ===
=== Usages ===
v54 v200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j198 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j199 
y: j240 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j199 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 a95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
j199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v59 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a95  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleFullEscape(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v259 a95 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v38 i31 
=== Succesors ===
next: v259 
=== Usages ===
v259 a104 
=== Predecessor ===
v59 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v38 i31 #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-25697|0xffffffffffff9b9f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a95 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
a95 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a95 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
value: j240 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - value: j240 stateAfter: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v270 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v270 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v271 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v271 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v272 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v272 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v273 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v273 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
lastLocationAccess: - 
value: i31 
stateAfter: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 lastLocationAccess: - value: i31 stateAfter: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
lastLocationAccess: - 
value: j39 
stateAfter: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 lastLocationAccess: - value: j39 stateAfter: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
lastLocationAccess: - 
value: v239 
stateAfter: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v268 lastLocationAccess: - value: v239 stateAfter: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: j67 
stateAfter: - 
=== Succesors ===
next: a93 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: j67 stateAfter: - #next: a93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j198 
=== Succesors ===
next: v101 
=== Usages ===
a104 
=== Predecessor ===
v206 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j198 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
a93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v102 
values: a93 a95 
=== Succesors ===
=== Usages ===
v262 a35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v102 values: a93 a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v103 
=== Succesors ===
next: v34 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v103 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
lastLocationAccess: - 
value: i1 
stateAfter: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 lastLocationAccess: - value: i1 stateAfter: - #next: v36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a35 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a104 
=== Succesors ===
next: v222 
=== Usages ===
a17 v261 
=== Predecessor ===
v36 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
a35 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 j226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a16 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a16 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
op: Compress
stamp: n!#[ [I
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
lastLocationAccess: - 
value: a17 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v260 lastLocationAccess: - value: a17 stateAfter: - #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@eaaf570
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j226 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a16 
=== Succesors ===
next: v233 
=== Usages ===
j228 
=== Predecessor ===
v236 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a16 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j226 
y: i227 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j226 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] ⇊000000010cb56000 ⇈000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j228 
index: j231 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j228 index: j231  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: i234 
stateAfter: - 
=== Succesors ===
next: i257 
=== Usages ===
=== Predecessor ===
j226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: i234 stateAfter: - #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:126) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
v11 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:126) [bci: 15]
stamp: void
=== Inputs ===
result: i257 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i257 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@17f98d53
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j42 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j42 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j198 
=== Usages ===
v263 v264 
=== Predecessor ===
v220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j198  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j42 
index: - 
=== Succesors ===
=== Usages ===
j198 v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j198 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
=== Succesors ===
next: j199 
=== Usages ===
j240 v265 v266 v273 a93 v267 v268 v270 v271 v272 
=== Predecessor ===
j42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - #next: j199  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j42 
index: - 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
v54 
=== Predecessor ===
j198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j198 
y: j142 
=== Succesors ===
=== Usages ===
v54 v200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j198 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j199 
y: j240 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j199 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 a95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e437bace <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
j199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v59 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a95  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleFullEscape(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v259 a95 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v38 i31 
=== Succesors ===
next: v259 
=== Usages ===
v259 a104 
=== Predecessor ===
v59 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v38 i31 #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-25697|0xffffffffffff9b9f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a95 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
a95 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a95 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
value: j240 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - value: j240 stateAfter: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result [v1|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v270 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v270 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
result [v1|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v271 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v271 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
result [v1|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v272 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v272 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
result [v1|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v273 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v273 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v1|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
lastLocationAccess: - 
value: i31 
stateAfter: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 lastLocationAccess: - value: i31 stateAfter: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v1|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
lastLocationAccess: - 
value: j39 
stateAfter: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 lastLocationAccess: - value: j39 stateAfter: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v1|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
lastLocationAccess: - 
value: v239 
stateAfter: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v268 lastLocationAccess: - value: v239 stateAfter: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v1|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j198 
index: - 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j198 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: j67 
stateAfter: - 
=== Succesors ===
next: a93 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: j67 stateAfter: - #next: a93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a93 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j198 
=== Succesors ===
next: v101 
=== Usages ===
a104 
=== Predecessor ===
v206 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j198 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
a93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v102 
values: a93 a95 
=== Succesors ===
=== Usages ===
v262 a35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v102 values: a93 a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v103 
=== Succesors ===
next: v34 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v103 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
lastLocationAccess: - 
value: i1 
stateAfter: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 lastLocationAccess: - value: i1 stateAfter: - #next: v36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a35 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a104 
=== Succesors ===
next: v222 
=== Usages ===
a17 v261 
=== Predecessor ===
v36 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
a35 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 j226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v7|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a16 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a16 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
op: Compress
stamp: n!#[ [I
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
lastLocationAccess: - 
value: a17 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v260 lastLocationAccess: - value: a17 stateAfter: - #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@eaaf570
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j226 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j226 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a16 
=== Succesors ===
next: v233 
=== Usages ===
j228 
=== Predecessor ===
v236 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a16 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j226 
y: i227 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j226 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] ⇊000000010cb56000 ⇈000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result [v9|QWORD[*] + v10|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j228 
index: j231 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j228 index: j231  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleFullEscape(JavaExamples.java:125) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: i234 
stateAfter: - 
=== Succesors ===
next: i257 
=== Usages ===
=== Predecessor ===
j226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: i234 stateAfter: - #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:126) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
v11 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:126) [bci: 15]
stamp: void
=== Inputs ===
result: i257 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i257 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[58, 60[[70, 72[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[68, 70[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[66, 70[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 40[[62, 78[6 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [8, 34[8 MustHaveRegister 10 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rax|q [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v1|q [34, 37[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|q [38, 56[40 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [42, 50[42 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v6|q [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v7|q [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[58, 60[[70, 72[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[68, 70[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[66, 70[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 40[[62, 78[6 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 34[8 MustHaveRegister 10 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [34, 37[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [38, 56[40 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [42, 50[42 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[58, 60[[70, 72[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[68, 70[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[66, 70[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 40[[62, 78[6 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 34[8 MustHaveRegister 10 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [34, 37[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [38, 56[40 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [42, 50[42 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[58, 60[[70, 72[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[68, 70[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[66, 70[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 40[[62, 78[6 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 34[8 MustHaveRegister 10 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [34, 37[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [38, 56[40 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [42, 50[42 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction v10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   26  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #58         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6498b4760488d70180f1f440000493b77700f8782000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008addeadde48c74010000000004489501048beaddeaddeaddeadde488bd048c1ea03895674f08304240048c1ee0948ba0060b50c01000000c60416008b4010488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba010000000f1f440000e800000000908500eb9d41c787f40200009f9bffff49c7870003000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 23 10 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 32 12 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 42 block B2 null  <||@
  Comment 42 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 42 16 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 46 18 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 53 20 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 60 22 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 67 24 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 74 26 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 81 28 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 88 30 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 95 32 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 103 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 103 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 40 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 107 42 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 107 {Object[Class:JavaExamples]}  <||@
  Comment 117 44 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3  <||@
  Comment 124 46 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 127 48 MEMBAR barriers: 4  <||@
  Comment 132 50 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 136 52 rdx|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 146 54 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 150 56 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 162 POLL_RETURN_NEAR  <||@
  Comment 172 block B1 null  <||@
  Comment 172 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 64 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 172 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 182 68 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 192 70 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 192 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 197 []at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 198 74 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 198 [rax:0]at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 198 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 76 JUMP ~[] destination: B1 -> B3  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 229 [rax:0]at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 230 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 230 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 236 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-134[JavaExamples.exampleFullEscape(int)]"
  method "HotSpotCompilation-134[JavaExamples.exampleFullEscape(int)]"
  date 1612307469543
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1182fde20 89842400c0feff4883ec1848896c2410448bd6498b4760488d70180f1f440000493b77700f8782000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c740086d0100f848c74010000000004489501048beb0da02c005000000488bd048c1ea03895674f08304240048c1ee0948ba0060b50c01000000c60416008b4010488b6c24104883c41885053e314df0c5f877c348be680b00c007000000ba010000000f1f440000e8bb3dbdff908500eb9d41c787f40200009f9bffff49c7870003000000000000e839d429ff90e815856dff90e82fd329ff90f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ce5470e slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 23 10 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 32 12 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 42 block B2 null  <||@
  Comment 42 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 42 16 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 46 18 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 53 20 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 60 22 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 67 24 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 74 26 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 81 28 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 88 30 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 95 32 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 103 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 103 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 40 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 107 42 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 107 {Object[Class:JavaExamples]}  <||@
  Comment 117 44 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@40bf568e encoding: base: 0 shift: 3  <||@
  Comment 124 46 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 127 48 MEMBAR barriers: 4  <||@
  Comment 132 50 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 136 52 rdx|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 146 54 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 150 56 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 162 POLL_RETURN_NEAR  <||@
  Comment 172 block B1 null  <||@
  Comment 172 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 64 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 172 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 182 68 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 192 70 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 192 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 197 []at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 198 74 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 198 [rax:0]at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 198 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 76 JUMP ~[] destination: B1 -> B3  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 229 [rax:0]at JavaExamples.exampleFullEscape(JavaExamples.java:124) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 230 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 230 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 236 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
