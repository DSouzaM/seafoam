begin_compilation
  name " HotSpotCompilation-137[JavaExamples.exampleArrayAllocation(int, int)]"
  method "HotSpotCompilation-137[JavaExamples.exampleArrayAllocation(int, int)]"
  date 1612307469602
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@440efe0c
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j29 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j29 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j185 
=== Usages ===
v233 v234 
=== Predecessor ===
v207 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j185  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j29 
index: - 
=== Succesors ===
=== Usages ===
j185 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j29 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
lastLocationAccess: - 
=== Succesors ===
next: j186 
=== Usages ===
j212 v235 v236 v242 a80 v237 v238 v239 v240 v241 
=== Predecessor ===
j29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v233 lastLocationAccess: - #next: j186  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j29 
index: - 
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j29 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
v41 
=== Predecessor ===
j185 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v234 lastLocationAccess: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j185 
y: j129 
=== Succesors ===
=== Usages ===
v41 v187 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j185 y: j129  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j212 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j186 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 a82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
j186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v46 #falseSuccessor: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a82  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleArrayAllocation(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 300
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v230 a82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v26 i16 
=== Succesors ===
next: v230 
=== Usages ===
v230 a91 
=== Predecessor ===
v46 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v26 i16 #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-22369|0xffffffffffffa89f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a82 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a82 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
lastLocationAccess: - 
value: j212 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v233 lastLocationAccess: - value: j212 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v239 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v239 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v240 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v240 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v241 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v241 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v242 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v242 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
lastLocationAccess: - 
value: i16 
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 lastLocationAccess: - value: i16 stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
lastLocationAccess: - 
value: j27 
stateAfter: - 
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 lastLocationAccess: - value: j27 stateAfter: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
value: v211 
stateAfter: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - value: v211 stateAfter: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
lastLocationAccess: - 
value: j54 
stateAfter: - 
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 lastLocationAccess: - value: j54 stateAfter: - #next: a80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j185 
=== Succesors ===
next: v88 
=== Usages ===
a91 
=== Predecessor ===
v193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j185 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
a80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v89 
values: a80 a82 
=== Succesors ===
=== Usages ===
v232 a24 v231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v89 values: a80 a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v90 
=== Succesors ===
next: v23 
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v90 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a91 
index: - 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v232 lastLocationAccess: - value: i2 stateAfter: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a91 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
lastLocationAccess: - 
value: i1 
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v231 lastLocationAccess: - value: i1 stateAfter: - #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a91 
=== Succesors ===
next: v12 
=== Usages ===
v12 
=== Predecessor ===
v25 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a91 #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 11]
stamp: void
=== Inputs ===
result: a24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a24 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@440efe0c
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: j29 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j29 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:534) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:530) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:92) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j185 
=== Usages ===
v233 v234 
=== Predecessor ===
v207 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j185  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j29 
index: - 
=== Succesors ===
=== Usages ===
j185 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j29 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j185 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:269) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:544) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:93) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
lastLocationAccess: - 
=== Succesors ===
next: j186 
=== Usages ===
j212 v235 v236 v242 a80 v237 v238 v239 v240 v241 
=== Predecessor ===
j29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v233 lastLocationAccess: - #next: j186  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j29 
index: - 
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j29 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:273) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:539) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
v41 
=== Predecessor ===
j185 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v234 lastLocationAccess: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:210) [bci: 57]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j185 
y: j129 
=== Succesors ===
=== Usages ===
v41 v187 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j185 y: j129  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@f4d78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j212 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j186 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 a82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e437bace <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:103) [bci: 95]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
j186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v46 #falseSuccessor: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:109) [bci: 146]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a82  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleArrayAllocation(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 300
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v230 a82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, isReexecutable=true, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT, reexecutability=REEXECUTABLE}
descriptorName: new_array_or_null
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:424) [bci: 19]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:110) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v26 i16 
=== Succesors ===
next: v230 
=== Usages ===
v230 a91 
=== Predecessor ===
v46 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v26 i16 #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-22369|0xffffffffffffa89f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a82 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a82 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:277) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:549) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:104) [bci: 103]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
lastLocationAccess: - 
value: j212 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v233 lastLocationAccess: - value: j212 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v239 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v239 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v2|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v240 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v240 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v2|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v241 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v241 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v2|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:331) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v242 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v242 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v2|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:307) [bci: 11]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
lastLocationAccess: - 
value: i16 
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 lastLocationAccess: - value: i16 stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:512) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
lastLocationAccess: - 
value: j27 
stateAfter: - 
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 lastLocationAccess: - value: j27 stateAfter: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v2|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:513) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:494) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:310) [bci: 20]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
value: v211 
stateAfter: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - value: v211 stateAfter: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v2|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j185 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j185 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 1]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:214) [bci: 47]
at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:189) [bci: 147]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:167) [bci: 15]
at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:312) [bci: 43]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
lastLocationAccess: - 
value: j54 
stateAfter: - 
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 lastLocationAccess: - value: j54 stateAfter: - #next: a80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:319) [bci: 86]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 138]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j185 
=== Succesors ===
next: v88 
=== Usages ===
a91 
=== Predecessor ===
v193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j185 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
a80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a91 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v89 
values: a80 a82 
=== Succesors ===
=== Usages ===
v232 a24 v231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v89 values: a80 a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:112) [bci: 165]
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:173) [bci: 23] Substitution
at org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, Word, int, int, int, boolean, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v90 
=== Succesors ===
next: v23 
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v90 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
result [v7|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a91 
index: - 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v232 lastLocationAccess: - value: i2 stateAfter: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a91 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
lastLocationAccess: - 
value: i1 
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v231 lastLocationAccess: - value: i1 stateAfter: - #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!#[ [I
=== Inputs ===
object: a91 
=== Succesors ===
next: v12 
=== Usages ===
v12 
=== Predecessor ===
v25 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a91 #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 11]
stamp: void
=== Inputs ===
result: a24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[46, 48[[58, 60[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[56, 58[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[54, 58[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 44[[50, 66[6 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 42[[50, 66[8 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 36[10 MustHaveRegister 12 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [12, 18[12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [60, 65[60 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [40, 46[42 MustHaveRegister 44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[46, 48[[58, 60[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[56, 58[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[54, 58[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 44[[50, 66[6 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 42[[50, 66[8 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 36[10 MustHaveRegister 12 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 18[12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [60, 65[60 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [40, 46[42 MustHaveRegister 44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[46, 48[[58, 60[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[56, 58[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[54, 58[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 44[[50, 66[6 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 42[[50, 66[8 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 36[10 MustHaveRegister 12 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 18[12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [60, 65[60 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [40, 46[42 MustHaveRegister 44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[46, 48[[58, 60[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[56, 58[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[54, 58[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 44[[50, 66[6 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 42[[50, 66[8 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 36[10 MustHaveRegister 12 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 18[12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [60, 65[60 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [40, 46[42 MustHaveRegister 44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: v3|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction NULLCHECK [v5|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6448bda498b4760488d70186690493b77700f8758000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0200000048c70001000000c74008addeadde48c74010000000004489581444895010488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000e800000000908500ebcc41c787f40200009fa8ffff49c7870003000000000000e80000000090e80000000090666690e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 26 12 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 32 14 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 42 block B2 null  <||@
  Comment 42 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 42 18 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 46 20 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 53 22 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 60 24 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 67 26 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 74 28 MOV [rax|QWORD + 12] y: 2 size: DWORD  <||@
  Comment 81 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 88 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 95 34 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 103 36 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 103 38 JUMP ~[] destination: B2 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 42 MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 107 44 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 111 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 120 POLL_RETURN_NEAR  <||@
  Comment 130 block B1 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 52 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 130 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 140 56 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 145 58 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 145 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 150 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 151 62 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 151 [rax:0]at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 153 64 JUMP ~[] destination: B1 -> B3  <||@
  Comment 177 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 182 [rax:0]at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 183 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 183 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 192 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-137[JavaExamples.exampleArrayAllocation(int, int)]"
  method "HotSpotCompilation-137[JavaExamples.exampleArrayAllocation(int, int)]"
  date 1612307469671
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 118304ba0 89842400c0feff4883ec1848896c2410448bd6448bda498b4760488d70186690493b77700f8758000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0200000048c70001000000c740086d0100f848c74010000000004489581444895010488b6c24104883c4188505e8c34cf0c5f877c348be680b00c007000000ba02000000e86ad0bcff908500ebcc41c787f40200009fa8ffff49c7870003000000000000e8e86629ff90e8c4176dff90666690e8db6529ff90f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@47066ad1 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 26 12 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 32 14 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 112]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 42 block B2 null  <||@
  Comment 42 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 42 18 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 46 20 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 53 22 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 60 24 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 67 26 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 74 28 MOV [rax|QWORD + 12] y: 2 size: DWORD  <||@
  Comment 81 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 88 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 95 34 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 103 36 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 103 38 JUMP ~[] destination: B2 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 42 MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 107 44 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 111 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 120 POLL_RETURN_NEAR  <||@
  Comment 130 block B1 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 52 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 130 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 140 56 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 145 58 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 145 {Stub<new_array_or_null(KlassPointer,int)Object>@0x117ed1ca0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 150 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 151 62 NULLCHECK [rax|QWORD[.]] state [bci:0]  <||@
  Comment 151 [rax:0]at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 153 64 JUMP ~[] destination: B1 -> B3  <||@
  Comment 177 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10f13fc50, value=4686721854]:0x11759b33e}  <||@
  Comment 182 [rax:0]at JavaExamples.exampleArrayAllocation(JavaExamples.java:300) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 183 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 183 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 192 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
