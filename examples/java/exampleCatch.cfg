begin_compilation
  name " HotSpotCompilation-3208[JavaExamples.exampleCatch()]"
  method "HotSpotCompilation-3208[JavaExamples.exampleCatch()]"
  date 1612307470038
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v6  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleCatch()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@69363302
stamp: void
targetMethod: HotSpotMethod<JavaExamples.exampleThrow()>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
bci: 0
inlineControl: Normal
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
polymorphic: false
stamp: void
targetMethod: Direct#JavaExamples.exampleThrow
=== Inputs ===
classInit: - 
callTarget: v26 
stateDuring: ?80 
stateAfter: - 
=== Succesors ===
next: v7 
exceptionEdge: v32 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@InvokeWithException|@org.graalvm.compiler.nodes.InvokeWithExceptionNode>@ classInit: - callTarget: v26 stateDuring: ?80 stateAfter: - #next: v7 #exceptionEdge: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
locationIdentity: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:286) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
locationIdentity: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@2599050d
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j35 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j35 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:76) [bci: 1] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a46 
=== Usages ===
v104 v105 
=== Predecessor ===
v50 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a46  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
displacement: 816
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: - 
=== Succesors ===
=== Usages ===
a46 v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a46 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: ExceptionOop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readExceptionOop(HotSpotReplacementsUtil.java:250) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:77) [bci: 6] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: a! Ljava/lang/Throwable;
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
v23 v107 a28 
=== Predecessor ===
j35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v104 lastLocationAccess: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readExceptionOop(HotSpotReplacementsUtil.java:250) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:77) [bci: 6] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ExceptionOop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeExceptionOop(HotSpotReplacementsUtil.java:261) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:78) [bci: 12] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
lastLocationAccess: - 
value: a36 
stateAfter: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
a46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v104 lastLocationAccess: - value: a36 stateAfter: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
displacement: 824
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: - 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:79) [bci: 16] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ExceptionPc
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeExceptionPc(HotSpotReplacementsUtil.java:265) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:79) [bci: 22] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
value: j39 
stateAfter: - 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - value: j39 stateAfter: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a46 
index: - 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:158) [bci: 40] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
v106 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 lastLocationAccess: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v101 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:159) [bci: 54] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
v64 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
rawvalue: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:159) [bci: 58] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v102 
y: v55 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v102 y: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v9 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 j90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a27 
index: - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a27 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a28 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
op: Compress
stamp: n! Ljava/lang/RuntimeException;
=== Inputs ===
value: a46 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v103 
lastLocationAccess: - 
value: a28 
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v103 lastLocationAccess: - value: a28 stateAfter: - #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@409c55ea
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j90 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a27 
=== Succesors ===
next: v97 
=== Usages ===
j92 
=== Predecessor ===
v100 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a27 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j90 
y: i91 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j90 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] â‡Š000000010cb56000 â‡ˆ000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j92 
index: j95 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j92 index: j95  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
lastLocationAccess: - 
value: i98 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
j90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v108 lastLocationAccess: - value: i98 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:286) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -1]
stamp: void
=== Inputs ===
exception: a46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Unwind|@org.graalvm.compiler.nodes.UnwindNode>@ exception: a46  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v6  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleCatch()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@69363302
stamp: void
targetMethod: HotSpotMethod<JavaExamples.exampleThrow()>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
bci: 0
inlineControl: Normal
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
polymorphic: false
stamp: void
targetMethod: Direct#JavaExamples.exampleThrow
=== Inputs ===
classInit: - 
callTarget: v26 
stateDuring: ?80 
stateAfter: - 
=== Succesors ===
next: v7 
exceptionEdge: v32 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@InvokeWithException|@org.graalvm.compiler.nodes.InvokeWithExceptionNode>@ classInit: - callTarget: v26 stateDuring: ?80 stateAfter: - #next: v7 #exceptionEdge: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
locationIdentity: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:286) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
locationIdentity: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@2599050d
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j35 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j35 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:760) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:76) [bci: 1] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a46 
=== Usages ===
v104 v105 
=== Predecessor ===
v50 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a46  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
result [r15|QWORD + 816] <|@
d <@d|@=== Debug Properties ===
displacement: 816
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: - 
=== Succesors ===
=== Usages ===
a46 v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a46 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: true
location: ExceptionOop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readExceptionOop(HotSpotReplacementsUtil.java:250) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:77) [bci: 6] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: a! Ljava/lang/Throwable;
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
v23 v107 a28 
=== Predecessor ===
j35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v104 lastLocationAccess: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readExceptionOop(HotSpotReplacementsUtil.java:250) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:77) [bci: 6] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ExceptionOop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeExceptionOop(HotSpotReplacementsUtil.java:261) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:78) [bci: 12] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
lastLocationAccess: - 
value: a36 
stateAfter: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
a46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v104 lastLocationAccess: - value: a36 stateAfter: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
result [r15|QWORD + 824] <|@
d <@d|@=== Debug Properties ===
displacement: 824
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: - 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:79) [bci: 16] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ExceptionPc
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeExceptionPc(HotSpotReplacementsUtil.java:265) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(LoadExceptionObjectSnippets.java:79) [bci: 22] Substitution
at org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.loadException(Register) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
value: j39 
stateAfter: - 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - value: j39 stateAfter: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a46 
index: - 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:158) [bci: 40] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
v106 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 lastLocationAccess: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result [v1|DWORD * 8 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v101 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:159) [bci: 54] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
v64 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
rawvalue: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:159) [bci: 58] Substitution
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at JavaExamples.exampleCatch() [bci: -4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v102 
y: v55 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v102 y: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e437bace <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v9 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: Class:JavaExamples
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:JavaExamples]
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 j90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result [v3|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a27 
index: - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a27 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a28 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
op: Compress
stamp: n! Ljava/lang/RuntimeException;
=== Inputs ===
value: a46 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v103 
lastLocationAccess: - 
value: a28 
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v103 lastLocationAccess: - value: a28 stateAfter: - #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@409c55ea
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j90 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: j90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j90 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 13] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a27 
=== Succesors ===
next: v97 
=== Usages ===
j92 
=== Predecessor ===
v100 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a27 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableShift(HotSpotSerialWriteBarrierSnippets.java:58) [bci: 3]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 17]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 20]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j90 
y: i91 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j90 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(HotSpotMarkId) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:107) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.cardTableAddress(HotSpotSerialWriteBarrierSnippets.java:53) [bci: 0]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:94) [bci: 12]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 4508180480
stableDimension: 0
stamp: i64 [4508180480] â‡Š000000010cb56000 â‡ˆ000000010cb56000
stampKind: i64
value: long[4508180480|0x10cb56000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j92 
index: j95 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j92 index: j95  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialWriteBarrier(SerialWriteBarrierSnippets.java:99) [bci: 77]
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:63) [bci: 18] Substitution
at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(Object, SerialWriteBarrierSnippets$Counters, boolean) [bci: -1] Substitution
at JavaExamples.exampleCatch(JavaExamples.java:284) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
lastLocationAccess: - 
value: i98 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
j90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v108 lastLocationAccess: - value: i98 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch(JavaExamples.java:286) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleCatch() [bci: -1]
stamp: void
=== Inputs ===
exception: a46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Unwind|@org.graalvm.compiler.nodes.UnwindNode>@ exception: a46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[6, 7[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 1[[6, 7[[30, 32[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q -1 [16, 30[[34, 38[16 MustHaveRegister 22 MustHaveRegister 30 ShouldHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [22, 26[22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [36, 44[36 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v0|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v3|q [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[6, 7[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 1[[6, 7[[30, 32[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q -1 [16, 30[[34, 38[16 MustHaveRegister 22 MustHaveRegister 30 ShouldHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [22, 26[22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r11|q]" v2|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [36, 44[36 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v0|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v3|q [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[6, 7[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 1[[6, 7[[30, 32[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q -1 [16, 30[[34, 38[16 MustHaveRegister 22 MustHaveRegister 30 ShouldHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [22, 26[22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r11|q]" v2|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [36, 44[36 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v0|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v3|q [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[6, 7[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 1[[6, 7[[30, 32[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[6, 7[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q -1 [16, 30[[34, 38[16 MustHaveRegister 22 MustHaveRegister 30 ShouldHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [22, 26[22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r11|q]" v2|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [36, 44[36 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v0|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v3|q [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v0|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v2|QWORD, y: [v1|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [v3|QWORD[.] + 116], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction v5|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [v5|QWORD[*] + v6|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers"B2" 
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0]
locals: - 
>@ <|@ instruction - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0] <|@ <|@
      nr    8  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags "ex" 
    probability 4532020583610935537
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 816] y: 0 size: QWORD <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 824] y: 0 size: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.]) <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4527516983983565041
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples] <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[4508180480|0x10cb56000] <|@ <|@
      nr   48  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #35         // exampleThrow:()void
     3: goto          11
     6: astore_0      
     7: aload_0       
     8: putstatic     #58         // objectField:java.lang.Object
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c24100f1f8000000000e80000000090488b6c24104883c418850500000000c34d8b973003000049c787300300000000000049c7873803000000000000418b720849bbaddeaddeaddeadde0f1f8400000000004c3b1cf5400000000f8418000000498bf2488b6c24104883c418488b14246690e97bffffff9049bbaddeaddeaddeadde49c1ea0345895374f08304240049c1eb0949ba0060b50c0100000043c6041300488b6c24104883c41885050000000090c3e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 ------ Exception Handlers ------
      28 -> 45
    <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD  <||@
  Comment 16 6 - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0]  <||@
  Comment 16 INVOKESTATIC  <||@
  Comment 23 {HotSpotMethod<JavaExamples.exampleThrow()>}  <||@
  Comment 28 [exception -> 45]  <||@
  Comment 28 []at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 29 8 JUMP ~[] destination: B0 -> B1  <||@
  Comment 29 block B1 null  <||@
  Comment 29 10 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 29 12 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 38 POLL_RETURN_NEAR  <||@
  Comment 45 block B2 null  <||@
  Comment 45 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 45 16 r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD  <||@
  Comment 45 [exception handler for 28]  <||@
  Comment 52 18 MOV [r15|QWORD + 816] y: 0 size: QWORD  <||@
  Comment 63 20 MOV [r15|QWORD + 824] y: 0 size: QWORD  <||@
  Comment 74 22 rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 78 24 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}  <||@
  Comment 78 {meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}}  <||@
  Comment 96 26 CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 110 block B4 null  <||@
  Comment 110 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 30 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 113 32 UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.])  <||@
  Comment 128 {Stub<UnwindExceptionToCallerStub.unwindExceptionToCaller>@0x11765d160:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,rsi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL,rbx|ILLEGAL,r13|ILLEGAL,r14|ILLEGAL}  <||@
  Comment 134 block B3 null  <||@
  Comment 134 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 36 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 134 {Object[Class:JavaExamples]}  <||@
  Comment 144 38 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3  <||@
  Comment 148 40 MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 152 42 MEMBAR barriers: 4  <||@
  Comment 157 44 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 161 46 r10|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 171 48 MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 176 50 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 185 POLL_RETURN_NEAR  <||@
  Comment 193 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 193 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 199 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3208[JavaExamples.exampleCatch()]"
  method "HotSpotCompilation-3208[JavaExamples.exampleCatch()]"
  date 1612307470098
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11830fd60 89842400c0feff4883ec1848896c24100f1f8000000000e824a5f9ff90488b6c24104883c41885057a124cf0c34d8b973003000049c787300300000000000049c7873803000000000000418b720849bba83200c0070000000f1f8400000000004c3b1cf5400000000f8418000000498bf2488b6c24104883c418488b14246690e97bd334ff9049bbb0da02c00500000049c1ea0345895374f08304240049c1eb0949ba0060b50c0100000043c6041300488b6c24104883c4188505e7114cf090c3e8fa656cff90e814b428ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 ------ Exception Handlers ------
      28 -> 45
    <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79105321 slotKind: QWORD  <||@
  Comment 16 6 - = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.exampleThrow()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:0]  <||@
  Comment 16 INVOKESTATIC  <||@
  Comment 23 {HotSpotMethod<JavaExamples.exampleThrow()>}  <||@
  Comment 28 [exception -> 45]  <||@
  Comment 28 []at JavaExamples.exampleCatch(JavaExamples.java:282) [bci: 0, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 29 8 JUMP ~[] destination: B0 -> B1  <||@
  Comment 29 block B1 null  <||@
  Comment 29 10 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 29 12 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 38 POLL_RETURN_NEAR  <||@
  Comment 45 block B2 null  <||@
  Comment 45 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 45 16 r10|QWORD[.] = MOV [r15|QWORD + 816] size: QWORD  <||@
  Comment 45 [exception handler for 28]  <||@
  Comment 52 18 MOV [r15|QWORD + 816] y: 0 size: QWORD  <||@
  Comment 63 20 MOV [r15|QWORD + 824] y: 0 size: QWORD  <||@
  Comment 74 22 rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 78 24 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}  <||@
  Comment 78 {meta{HotSpotType<Ljava/lang/RuntimeException;, resolved>}}  <||@
  Comment 96 26 CMPBRANCH (x: r11|QWORD, y: [rsi|DWORD * 8 + 64]) trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 110 block B4 null  <||@
  Comment 110 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 30 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 113 32 UNWIND (savedRbp: stack:16|QWORD, exception: rsi|QWORD[.])  <||@
  Comment 128 {Stub<UnwindExceptionToCallerStub.unwindExceptionToCaller>@0x11765d160:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,rsi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL,rbx|ILLEGAL,r13|ILLEGAL,r14|ILLEGAL}  <||@
  Comment 134 block B3 null  <||@
  Comment 134 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 36 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:JavaExamples]  <||@
  Comment 134 {Object[Class:JavaExamples]}  <||@
  Comment 144 38 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2166c122 encoding: base: 0 shift: 3  <||@
  Comment 148 40 MOV (x: [r11|QWORD[.] + 116], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 152 42 MEMBAR barriers: 4  <||@
  Comment 157 44 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 161 46 r10|QWORD = MOVE input: long[4508180480|0x10cb56000]  <||@
  Comment 171 48 MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 176 50 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 185 POLL_RETURN_NEAR  <||@
  Comment 193 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 193 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 199 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
