begin_compilation
  name " HotSpotCompilation-930[JavaExamples.exampleLocalVariablesState(int, int)]"
  method "HotSpotCompilation-930[JavaExamples.exampleLocalVariablesState(int, int)]"
  date 1612307469402
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i6  <|@  <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
referencedType: [null]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@767e9900
stamp: void
targetMethod: HotSpotMethod<JavaExamples.opaqueCall()>
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
?15 i13 i20 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1 y: i2  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<JavaExamples.exampleLocalVariablesState(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i4 
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
polymorphic: false
stamp: i32
targetMethod: Direct#JavaExamples.opaqueCall
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v14 
stateDuring: ?15 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v14 stateDuring: ?15 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 10]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i4 
y: i12 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i4 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 13]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i6  <|@  <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
referencedType: [null]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@767e9900
stamp: void
targetMethod: HotSpotMethod<JavaExamples.opaqueCall()>
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
?15 i13 i20 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1 y: i2  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<JavaExamples.exampleLocalVariablesState(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i4 
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
polymorphic: false
stamp: i32
targetMethod: Direct#JavaExamples.opaqueCall
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v14 
stateDuring: ?15 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v14 stateDuring: ?15 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 10]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i4 
y: i12 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i4 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleLocalVariablesState(JavaExamples.java:78) [bci: 13]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[12, 14[[20, 22[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[12, 13[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- -1 [0, 6[[12, 13[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rsi|- [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v0|d [10, 18[10 MustHaveRegister 16 ShouldHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d rax|d [14, 15[14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v2|d [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[12, 14[[20, 22[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[12, 13[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- -1 [0, 6[[12, 13[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  v0|d DWORD "[rsi|d]" v0|d rsi|- [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [10, 11[10 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rax|d]" v3|d rax|d [14, 15[14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d v2|d [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d v4|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[vstack:0|d]" v2|d v2|d [11, 18[16 ShouldHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[12, 14[[20, 22[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[12, 13[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- -1 [0, 6[[12, 13[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  v0|d DWORD "[rsi|d]" v0|d rsi|- [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [10, 11[10 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rax|d]" v3|d rax|d [14, 15[14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d v2|d [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d v4|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[vstack:0|d]" v2|d v2|d [11, 18[16 ShouldHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[12, 14[[20, 22[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[12, 13[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- -1 [0, 6[[12, 13[ "NoSpillStore"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[ "NoDefinitionFound"
  v0|d DWORD "[rsi|d]" v0|d rsi|- [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [10, 11[10 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rax|d]" v3|d rax|d [14, 15[14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d v2|d [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d v4|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[vstack:0|d]" v2|d v2|d [11, 18[16 ShouldHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = ADD (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - v2|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   14  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - vstack:0|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = SHL vstack:0|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - vstack:0|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = SHL vstack:0|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction vstack:0|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - vstack:0|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL vstack:0|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [8, 14[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [8, 14[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4]
locals: - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4] <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = SHL stack:28|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iadd          
     3: istore_2      
     4: invokestatic  #52         // opaqueCall:()int
     7: pop           
     8: iload_2       
     9: iconst_2      
    10: imul          
    11: iload_2       
    12: iadd          
    13: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c241003f28974240490e800000000908b742404d1e6037424048bc6488b6c24104883c418850500000000c3e8000000009090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD  <||@
  Comment 16 6 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 18 8 stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4]  <||@
  Comment 22 INVOKESTATIC  <||@
  Comment 23 {HotSpotMethod<JavaExamples.opaqueCall()>}  <||@
  Comment 28 []at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2              
     locals:  |-  |-  |stack:28|DWORD   <||@
  Comment 29 12 rsi|DWORD = SHL stack:28|DWORD size: DWORD  <||@
  Comment 35 14 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 39 16 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 41 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 50 POLL_RETURN_NEAR  <||@
  Comment 57 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 57 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 64 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 64 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-930[JavaExamples.exampleLocalVariablesState(int, int)]"
  method "HotSpotCompilation-930[JavaExamples.exampleLocalVariablesState(int, int)]"
  date 1612307469439
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1182f2860 89842400c0feff4883ec1848896c241003f28974240490e8245cfbff908b742404d1e6037424048bc6488b6c24104883c41885056ee74df0c3e8823b6eff9090e89b892aff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 11 FRAME_COMPLETE  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1fdbaeec slotKind: QWORD  <||@
  Comment 16 6 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 18 8 stack:28|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|DWORD = CALL_DIRECT [] [] callTarget: HotSpotMethod<JavaExamples.opaqueCall()> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad state [bci:4]  <||@
  Comment 22 INVOKESTATIC  <||@
  Comment 23 {HotSpotMethod<JavaExamples.opaqueCall()>}  <||@
  Comment 28 []at JavaExamples.exampleLocalVariablesState(JavaExamples.java:77) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2              
     locals:  |-  |-  |stack:28|DWORD   <||@
  Comment 29 12 rsi|DWORD = SHL stack:28|DWORD size: DWORD  <||@
  Comment 35 14 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 39 16 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 41 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@384cadad  <||@
  Comment 50 POLL_RETURN_NEAR  <||@
  Comment 57 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1179d6420:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 57 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 64 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10f13fc40, value=4686721600]:0x11759b240}  <||@
  Comment 64 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
