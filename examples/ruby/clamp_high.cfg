begin_compilation
  name " TruffleHotSpotCompilation-12154[Object#clamp_high]"
  method "TruffleHotSpotCompilation-12154[Object#clamp_high]"
  date 1610758251481
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a3223 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a3223  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3236 v3233 v3235 v3234 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3233 
lastLocationAccess: - 
=== Succesors ===
next: v3132 
=== Usages ===
v3112 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3233 lastLocationAccess: - #next: v3132  <|@  <|@
f <@~|@floating>@ <|@
tid v3112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3223 
=== Succesors ===
=== Usages ===
v3132 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v3132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3112 
=== Succesors ===
trueSuccessor: v3129 
falseSuccessor: v3131 
=== Usages ===
=== Predecessor ===
a3223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3112 #trueSuccessor: v3129 #falseSuccessor: v3131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:259) [bci: 4]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3224 
=== Usages ===
=== Predecessor ===
v3132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3224  <|@  <|@
f <@~|@floating>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3234 
lastLocationAccess: - 
=== Succesors ===
next: i3225 
=== Usages ===
v3237 
=== Predecessor ===
v3129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3234 lastLocationAccess: - #next: i3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3237 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3224 
=== Succesors ===
=== Usages ===
i3225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.NoImplicitCastsToLongGen.asImplicitInteger(NoImplicitCastsToLongGen.java:44) [bci: 41]
at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:45) [bci: 89] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3237 
lastLocationAccess: - 
=== Succesors ===
next: v3136 
=== Usages ===
v543 
=== Predecessor ===
a3224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3237 lastLocationAccess: - #next: v3136  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1206) [bci: 50]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3231 v2965 v543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3225 
y: i30 
=== Succesors ===
=== Usages ===
v3136 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3225 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v3136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v3133 
falseSuccessor: v3135 
=== Usages ===
=== Predecessor ===
i3225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v3133 #falseSuccessor: v3135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:47) [bci: 103] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3226 
=== Usages ===
=== Predecessor ===
v3136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3226  <|@  <|@
f <@~|@floating>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3235 
lastLocationAccess: - 
=== Succesors ===
next: i3227 
=== Usages ===
v3238 
=== Predecessor ===
v3133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3235 lastLocationAccess: - #next: i3227  <|@  <|@
f <@~|@floating>@ <|@
tid v3238 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3226 
=== Succesors ===
=== Usages ===
i3227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.NoImplicitCastsToLongGen.asImplicitInteger(NoImplicitCastsToLongGen.java:44) [bci: 41]
at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:45) [bci: 89] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3238 
lastLocationAccess: - 
=== Succesors ===
next: v3140 
=== Usages ===
v718 
=== Predecessor ===
a3226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3238 lastLocationAccess: - #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 90
stableDimension: 0
stamp: i32 [90] ⇊000000000000005a ⇈000000000000005a
stampKind: i32
value: int[90|0x5a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 i3232 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3227 
y: i717 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3227 y: i717  <|@  <|@
f <@*|@fixed>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v3137 
falseSuccessor: v3139 
=== Usages ===
=== Predecessor ===
i3227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v3137 #falseSuccessor: v3139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:47) [bci: 103] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3228 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3236 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3236 
lastLocationAccess: - 
=== Succesors ===
next: i3229 
=== Usages ===
v3239 
=== Predecessor ===
v3137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3236 lastLocationAccess: - #next: i3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3228 
=== Succesors ===
=== Usages ===
i3229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.RubyTypesGen.asImplicitInteger(RubyTypesGen.java:115) [bci: 41]
at org.truffleruby.language.locals.WriteFrameSlotNodeGen.executeWrite(WriteFrameSlotNodeGen.java:35) [bci: 74] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:36) [bci: 43] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3239 
lastLocationAccess: - 
=== Succesors ===
next: v3207 
=== Usages ===
i3231 v2965 
=== Predecessor ===
a3228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3239 lastLocationAccess: - #next: v3207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@36ee4243
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3230 
=== Usages ===
=== Predecessor ===
i3229 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: a3230  <|@  <|@
f <@~|@floating>@ <|@
tid a3179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 13]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
rawvalue: Integer[256]{-128, -127, -126, -125, -124, ...}
stableDimension: 0
stamp: a!# java.lang.Integer[]
stampKind: a -
value: Object[Integer[256]{-128, -127, -126, -125, -124, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2965 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466b2f74
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3229 
y: i30 
=== Succesors ===
=== Usages ===
i3231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3229 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i3231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
=== Inputs ===
condition: v2965 
trueValue: i30 
falseValue: i3229 
=== Succesors ===
=== Usages ===
i3232 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2965 trueValue: i30 falseValue: i3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ef7c31b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3231 
y: i717 
=== Succesors ===
=== Usages ===
i3232 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3231 y: i717  <|@  <|@
f <@~|@floating>@ <|@
tid i3232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
=== Inputs ===
condition: v3031 
trueValue: i3231 
falseValue: i717 
=== Succesors ===
=== Usages ===
i3180 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v3031 trueValue: i3231 falseValue: i717  <|@  <|@
f <@~|@floating>@ <|@
tid i3176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:830) [bci: 10]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 20]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32
=== Inputs ===
x: i3232 
y: i3176 
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3232 y: i3176  <|@  <|@
f <@~|@floating>@ <|@
tid v3240 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3179 
index: i3180 
=== Succesors ===
=== Usages ===
a3230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3179 index: i3180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 21]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: n# java.lang.Integer
=== Inputs ===
stateBefore: - 
guard: - 
address: v3240 
lastLocationAccess: - 
=== Succesors ===
next: v2138 
=== Usages ===
a3195 
=== Predecessor ===
v3207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3240 lastLocationAccess: - #next: v2138  <|@  <|@
f <@~|@floating>@ <|@
tid a3195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 21]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a3230 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:564) [bci: 47]
stamp: void
=== Inputs ===
result: a3195 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a3230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a3195 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3221 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3221  <|@  <|@
f <@~|@floating>@ <|@
tid i3222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792235
stableDimension: 0
stamp: i32 [-792235] ⇊00000000fff3e955 ⇈00000000fff3e955
stampKind: i32
value: int[-792235|0xfffffffffff3e955]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3219 
=== Usages ===
=== Predecessor ===
v3136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3219  <|@  <|@
f <@~|@floating>@ <|@
tid i3220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -791979
stableDimension: 0
stamp: i32 [-791979] ⇊00000000fff3ea55 ⇈00000000fff3ea55
stampKind: i32
value: int[-791979|0xfffffffffff3ea55]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3213 
=== Usages ===
=== Predecessor ===
v3132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3213  <|@  <|@
f <@~|@floating>@ <|@
tid i3214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792491
stableDimension: 0
stamp: i32 [-792491] ⇊00000000fff3e855 ⇈00000000fff3e855
stampKind: i32
value: int[-792491|0xfffffffffff3e855]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3216 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-792491 - -791979] ⇊00000000fff3e855 ⇈00000000fff3eb55
valueDescription: i32
=== Inputs ===
merge: v3212 
values: i3214 i3220 i3222 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3212 values: i3214 i3220 i3222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3213 v3219 v3221 
=== Succesors ===
next: v3218 
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3213 v3219 v3221 #next: v3218  <|@  <|@
f <@~|@floating>@ <|@
tid j3215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: HotSpotOptimizedCallTarget@1871968556
stableDimension: 0
stamp: a!# org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget
stampKind: a -
value: Object[HotSpotOptimizedCallTarget@1871968556]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<OptimizedCallTarget.profiledPERoot(Object[])>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: OptimizedCallTarget.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v3218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i3216 
speculation: j3215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3212 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i3216 speculation: j3215  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a3223 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a3223  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3236 v3233 v3235 v3234 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3223 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3233 
lastLocationAccess: - 
=== Succesors ===
next: v3132 
=== Usages ===
v3112 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3233 lastLocationAccess: - #next: v3132  <|@  <|@
f <@~|@floating>@ <|@
tid v3112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3223 
=== Succesors ===
=== Usages ===
v3132 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v3132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3112 
=== Succesors ===
trueSuccessor: v3129 
falseSuccessor: v3131 
=== Usages ===
=== Predecessor ===
a3223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3112 #trueSuccessor: v3129 #falseSuccessor: v3131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:259) [bci: 4]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3224 
=== Usages ===
=== Predecessor ===
v3132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3224  <|@  <|@
f <@~|@floating>@ <|@
tid v3234 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3224 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3234 
lastLocationAccess: - 
=== Succesors ===
next: i3225 
=== Usages ===
v3237 
=== Predecessor ===
v3129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3234 lastLocationAccess: - #next: i3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3237 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3224 
=== Succesors ===
=== Usages ===
i3225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3225 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.NoImplicitCastsToLongGen.asImplicitInteger(NoImplicitCastsToLongGen.java:44) [bci: 41]
at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:45) [bci: 89] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3237 
lastLocationAccess: - 
=== Succesors ===
next: v3136 
=== Usages ===
v543 
=== Predecessor ===
a3224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3237 lastLocationAccess: - #next: v3136  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1206) [bci: 50]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3231 v2965 v543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3225 
y: i30 
=== Succesors ===
=== Usages ===
v3136 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3225 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v3136 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6e26aab5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v3133 
falseSuccessor: v3135 
=== Usages ===
=== Predecessor ===
i3225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v3133 #falseSuccessor: v3135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:47) [bci: 103] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3226 
=== Usages ===
=== Predecessor ===
v3136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3226  <|@  <|@
f <@~|@floating>@ <|@
tid v3235 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3226 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3235 
lastLocationAccess: - 
=== Succesors ===
next: i3227 
=== Usages ===
v3238 
=== Predecessor ===
v3133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3235 lastLocationAccess: - #next: i3227  <|@  <|@
f <@~|@floating>@ <|@
tid v3238 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3226 
=== Succesors ===
=== Usages ===
i3227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3227 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.NoImplicitCastsToLongGen.asImplicitInteger(NoImplicitCastsToLongGen.java:44) [bci: 41]
at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:45) [bci: 89] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3238 
lastLocationAccess: - 
=== Succesors ===
next: v3140 
=== Usages ===
v718 
=== Predecessor ===
a3226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3238 lastLocationAccess: - #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result int[90|0x5a] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 90
stableDimension: 0
stamp: i32 [90] ⇊000000000000005a ⇈000000000000005a
stampKind: i32
value: int[90|0x5a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 i3232 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3227 
y: i717 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3227 y: i717  <|@  <|@
f <@*|@fixed>@ <|@
tid v3140 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6e26aab5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v3137 
falseSuccessor: v3139 
=== Usages ===
=== Predecessor ===
i3227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v3137 #falseSuccessor: v3139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:47) [bci: 103] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3228 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3236 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3228 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.castArgumentsImpl(OptimizedCallTarget.java:1220) [bci: 72]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.injectArgumentsProfile(OptimizedCallTarget.java:1207) [bci: 70]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:560) [bci: 21]
nullCheck: false
stamp: n java.lang.Object
=== Inputs ===
stateBefore: - 
guard: - 
address: v3236 
lastLocationAccess: - 
=== Succesors ===
next: i3229 
=== Usages ===
v3239 
=== Predecessor ===
v3137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3236 lastLocationAccess: - #next: i3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3228 
=== Succesors ===
=== Usages ===
i3229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3229 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:139) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(Integer, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.intValue() [bci: -1]
at org.truffleruby.language.RubyTypesGen.asImplicitInteger(RubyTypesGen.java:115) [bci: 41]
at org.truffleruby.language.locals.WriteFrameSlotNodeGen.executeWrite(WriteFrameSlotNodeGen.java:35) [bci: 74] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:36) [bci: 43] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3239 
lastLocationAccess: - 
=== Succesors ===
next: v3207 
=== Usages ===
i3231 v2965 
=== Predecessor ===
a3228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3239 lastLocationAccess: - #next: v3207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
locations: [Lorg.graalvm.word.LocationIdentity;@36ee4243
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3230 
=== Usages ===
=== Predecessor ===
i3229 >@ <|@
instruction <@MemoryAnchor|@org.graalvm.compiler.nodes.memory.MemoryAnchorNode>@ #next: a3230  <|@  <|@
f <@~|@floating>@ <|@
tid a3179 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 13]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
rawvalue: Integer[256]{-128, -127, -126, -125, -124, ...}
stableDimension: 0
stamp: a!# java.lang.Integer[]
stampKind: a -
value: Object[Integer[256]{-128, -127, -126, -125, -124, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2965 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466b2f74
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3229 
y: i30 
=== Succesors ===
=== Usages ===
i3231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3229 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i3231 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
=== Inputs ===
condition: v2965 
trueValue: i30 
falseValue: i3229 
=== Succesors ===
=== Usages ===
i3232 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2965 trueValue: i30 falseValue: i3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ef7c31b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3231 
y: i717 
=== Succesors ===
=== Usages ===
i3232 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3231 y: i717  <|@  <|@
f <@~|@floating>@ <|@
tid i3232 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.truffleruby.core.array.ArrayNodes$SortNode.sortVeryShort(ArrayNodes.java:2146) [bci: 189] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.core.array.ArrayNodesFactory$SortNodeFactory$SortNodeGen.execute(ArrayNodesFactory.java:10304) [bci: 162] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:485) [bci: 16]
at org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71) [bci: 30] source=truffle:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/(core) 1:1
at org.truffleruby.language.methods.CallInternalMethodNode.callMethodCached(CallInternalMethodNode.java:44) [bci: 3] source=clamps.rb 2:1
at org.truffleruby.language.methods.CallInternalMethodNodeGen.execute(CallInternalMethodNodeGen.java:44) [bci: 83]
at org.truffleruby.language.dispatch.DispatchNode.execute(DispatchNode.java:143) [bci: 169] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.DispatchNode.dispatch(DispatchNode.java:117) [bci: 8] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.executeWithArgumentsEvaluated(RubyCallNode.java:121) [bci: 41] source=clamps.rb 2:1
at org.truffleruby.language.dispatch.RubyCallNode.execute(RubyCallNode.java:110) [bci: 82] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:49) [bci: 10] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
=== Inputs ===
condition: v3031 
trueValue: i3231 
falseValue: i717 
=== Succesors ===
=== Usages ===
i3180 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v3031 trueValue: i3231 falseValue: i717  <|@  <|@
f <@~|@floating>@ <|@
tid i3176 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:830) [bci: 10]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3180 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 20]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: i32
=== Inputs ===
x: i3232 
y: i3176 
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3232 y: i3176  <|@  <|@
f <@~|@floating>@ <|@
tid v3240 <|@
result [v6|QWORD[.] + v10|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3179 
index: i3180 
=== Succesors ===
=== Usages ===
a3230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3179 index: i3180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3230 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 21]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
nullCheck: false
stamp: n# java.lang.Integer
=== Inputs ===
stateBefore: - 
guard: - 
address: v3240 
lastLocationAccess: - 
=== Succesors ===
next: v2138 
=== Usages ===
a3195 
=== Predecessor ===
v3207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3240 lastLocationAccess: - #next: v2138  <|@  <|@
f <@~|@floating>@ <|@
tid a3195 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:831) [bci: 21]
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(BoxingSnippets.java:91) [bci: 5] Substitution
at org.graalvm.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: -1] Substitution
at java.lang.Integer.valueOf(int) [bci: -1] source=clamps.rb 2:1
at org.truffleruby.core.array.library.IntegerArrayStoreGen$ArrayStoreLibraryExports$Cached.read(IntegerArrayStoreGen.java:764) [bci: 58]
at org.truffleruby.core.array.ArrayIndexNodes$ReadNormalizedNode.readInBounds(ArrayIndexNodes.java:81) [bci: 6] source=clamps.rb 2:1
at org.truffleruby.core.array.ArrayIndexNodesFactory$ReadNormalizedNodeFactory$ReadNormalizedNodeGen.executeRead(ArrayIndexNodesFactory.java:287) [bci: 93]
at org.truffleruby.core.inlined.InlinedIndexGetNode.arrayRead(InlinedIndexGetNode.java:42) [bci: 28] source=clamps.rb 2:1
at org.truffleruby.core.inlined.InlinedIndexGetNodeGen.execute(InlinedIndexGetNodeGen.java:63) [bci: 158] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a3230 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:564) [bci: 47]
stamp: void
=== Inputs ===
result: a3195 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a3230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a3195 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3221 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3221  <|@  <|@
f <@~|@floating>@ <|@
tid i3222 <|@
result int[-792235|0xfffffffffff3e955] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792235
stableDimension: 0
stamp: i32 [-792235] ⇊00000000fff3e955 ⇈00000000fff3e955
stampKind: i32
value: int[-792235|0xfffffffffff3e955]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.truffleruby.language.arguments.ProfileArgumentNodeGen.execute(ProfileArgumentNodeGen.java:46) [bci: 100] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3219 
=== Usages ===
=== Predecessor ===
v3136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3219  <|@  <|@
f <@~|@floating>@ <|@
tid i3220 <|@
result int[-791979|0xfffffffffff3ea55] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -791979
stableDimension: 0
stamp: i32 [-791979] ⇊00000000fff3ea55 ⇈00000000fff3ea55
stampKind: i32
value: int[-791979|0xfffffffffff3ea55]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3213 
=== Usages ===
=== Predecessor ===
v3132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3213  <|@  <|@
f <@~|@floating>@ <|@
tid i3214 <|@
result int[-792491|0xfffffffffff3e855] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792491
stableDimension: 0
stamp: i32 [-792491] ⇊00000000fff3e855 ⇈00000000fff3e855
stampKind: i32
value: int[-792491|0xfffffffffff3e855]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
v3131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3216 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-792491 - -791979] ⇊00000000fff3e855 ⇈00000000fff3eb55
valueDescription: i32
=== Inputs ===
merge: v3212 
values: i3214 i3220 i3222 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3212 values: i3214 i3220 i3222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3213 v3219 v3221 
=== Succesors ===
next: v3218 
=== Usages ===
i3216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3213 v3219 v3221 #next: v3218  <|@  <|@
f <@~|@floating>@ <|@
tid j3215 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result Object[HotSpotOptimizedCallTarget@1871968556] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: HotSpotOptimizedCallTarget@1871968556
stableDimension: 0
stamp: a!# org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget
stampKind: a -
value: Object[HotSpotOptimizedCallTarget@1871968556]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<OptimizedCallTarget.profiledPERoot(Object[])>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: OptimizedCallTarget.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v3218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.truffle.api.profiles.ConditionProfile$Binary.profile(ConditionProfile.java:258) [bci: 1]
at org.truffleruby.language.arguments.ReadBlockFromCurrentFrameArgumentsNode.execute(ReadBlockFromCurrentFrameArgumentsNode.java:30) [bci: 18] source=clamps.rb 2:1
at org.truffleruby.language.locals.WriteLocalVariableNode.execute(WriteLocalVariableNode.java:35) [bci: 33] source=clamps.rb 2:1
at org.truffleruby.language.RubyNode.doExecuteVoid(RubyNode.java:73) [bci: 2] source=clamps.rb 2:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:33) [bci: 20] source=clamps.rb 2:1
at org.truffleruby.language.arguments.CheckArityNode.execute(CheckArityNode.java:41) [bci: 10] source=clamps.rb 1:1
at org.truffleruby.language.control.SequenceNode.execute(SequenceNode.java:36) [bci: 42] source=clamps.rb 1:1
at org.truffleruby.language.methods.CatchForMethodNode.execute(CatchForMethodNode.java:42) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.methods.ExceptionTranslatingNode.execute(ExceptionTranslatingNode.java:33) [bci: 5] source=clamps.rb 1:1
at org.truffleruby.language.RubyRootNode.execute(RubyRootNode.java:61) [bci: 13] source=clamps.rb 1:1
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:591) [bci: 9]
at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:562) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i3216 
speculation: j3215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3212 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i3216 speculation: j3215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[.], y: v1|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v3|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 90 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: v7|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v6|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792491|0xfffffffffff3e855]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 756], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-791979|0xfffffffffff3ea55]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792235|0xfffffffffff3e955]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[48, 50[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rdx|q [6, 26[[52, 71[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [28, 36[28 MustHaveRegister 32 ShouldHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [30, 44[30 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v5|d [36, 41[36 MustHaveRegister 38 ShouldHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [34, 37[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [64, 66[66 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[48, 50[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 26[[52, 71[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [28, 36[28 MustHaveRegister 32 ShouldHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 44[30 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v5|d [36, 41[36 MustHaveRegister 38 ShouldHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [34, 37[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [64, 66[66 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[48, 50[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 26[[52, 71[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [28, 36[28 MustHaveRegister 32 ShouldHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 44[30 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v5|d [36, 41[36 MustHaveRegister 38 ShouldHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [34, 37[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [64, 66[66 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[48, 50[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 26[[52, 71[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [28, 36[28 MustHaveRegister 32 ShouldHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 44[30 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v5|d [36, 41[36 MustHaveRegister 38 ShouldHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [34, 37[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [64, 66[66 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}] <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: < <|@ <|@
      nr   38  <|@ instruction CMP rax|DWORD y: 90 size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   42  <|@ instruction rax|DWORD = LEA [r11|DWORD + 128] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 768] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0]
locals: Object[HotSpotOptimizedCallTarget@1871968556] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff9066660f1f8400000000006666669089842400c0feff4883ec1848896c24108b422885c00f85720000008b422c6690833cc50c0000000a0f857d0000008b4230833cc50c0000005a0f85740000008b42348b04c50c00000049baaddeaddeaddeadde83f80a41bb0a000000410f4cc383f85a41bb5a000000440f42d8418d8380000000418b44821048c1e003488b6c24104883c418850500000000c341ba55e8f3ff458997f402000049c7870003000000000000e8000000009041ba55eaf3ffebe041ba55e9f3ffebd80f1f440000e80000000090e80000000090  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10a13dbc0, value=4509875104]:0x10ccf3ba0}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 43 FRAME_COMPLETE  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 51 10 TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD  <||@
  Comment 59 block B1 null  <||@
  Comment 59 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 14 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD  <||@
  Comment 64 16 CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null  <||@
  Comment 78 block B2 null  <||@
  Comment 78 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 20 rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD  <||@
  Comment 81 22 CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null  <||@
  Comment 95 block B3 null  <||@
  Comment 95 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 26 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 98 28 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 105 30 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}]  <||@
  Comment 105 {Object[Integer[256]{-128, -127, -126, -125, -124, ...}]}  <||@
  Comment 115 32 CMP rax|DWORD y: 10 size: DWORD  <||@
  Comment 118 34 r11|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 124 36 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: <  <||@
  Comment 128 38 CMP rax|DWORD y: 90 size: DWORD  <||@
  Comment 131 40 r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 141 42 rax|DWORD = LEA [r11|DWORD + 128] size: DWORD  <||@
  Comment 148 44 rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 153 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3  <||@
  Comment 157 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1  <||@
  Comment 166 POLL_RETURN_NEAR  <||@
  Comment 173 block B6 null  <||@
  Comment 173 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 -1 r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855]  <||@
  Comment 179 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 179 block B7 null  <||@
  Comment 179 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 179 66 MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD  <||@
  Comment 186 68 MOV [r15|QWORD + 768] y: 0 size: QWORD  <||@
  Comment 197 70 DEOPT info [bci:0]  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10a13dbe0, value=4509881150]:0x10ccf533e}  <||@
  Comment 202 [rdx:0]at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3 
     locals:  |Object[HotSpotOptimizedCallTarget@1871968556]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 203 block B5 null  <||@
  Comment 203 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 -1 r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55]  <||@
  Comment 209 58 JUMP ~[] destination: B5 -> B7  <||@
  Comment 211 block B4 null  <||@
  Comment 211 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 -1 r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955]  <||@
  Comment 217 62 JUMP ~[] destination: B4 -> B7  <||@
  Comment 224 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10d158ba0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 224 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10a13dbd0, value=4509880896]:0x10ccf5240}  <||@
  Comment 230 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10e1a6da0 448b560849c1e203493bc20f85efcdb4fe9066660f1f8400000000006666669089842400c0feff4883ec1848896c24108b422885c00f85720000008b422c6690833cc50c0000000a0f857d0000008b4230833cc50c0000005a0f85740000008b42348b04c50c00000049ba401900c00500000083f80a41bb0a000000410f4cc383f85a41bb5a000000440f42d8418d8380000000418b44821048c1e003488b6c24104883c4188505bad103f5c341ba55e8f3ff458997f402000049c7870003000000000000e8d4e4b4fe9041ba55eaf3ffebe041ba55e9f3ffebd80f1f440000e81b1dfbfe90e8b5e3b4fe90f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10a13dbc0, value=4509875104]:0x10ccf3ba0}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 43 FRAME_COMPLETE  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a91e30f slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 51 10 TESTBRANCH (x: rax|DWORD[.], y: rax|DWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 size: DWORD  <||@
  Comment 59 block B1 null  <||@
  Comment 59 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 14 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD  <||@
  Comment 64 16 CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 y: 10 size: DWORD inlinedY: null  <||@
  Comment 78 block B2 null  <||@
  Comment 78 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 20 rax|DWORD[.] = MOV [rdx|QWORD[.] + 48] size: DWORD  <||@
  Comment 81 22 CMPCONSTBRANCH [rax|DWORD[.] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 90 size: DWORD inlinedY: null  <||@
  Comment 95 block B3 null  <||@
  Comment 95 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 26 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 98 28 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 105 30 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Integer[256]{-128, -127, -126, -125, -124, ...}]  <||@
  Comment 105 {Object[Integer[256]{-128, -127, -126, -125, -124, ...}]}  <||@
  Comment 115 32 CMP rax|DWORD y: 10 size: DWORD  <||@
  Comment 118 34 r11|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 124 36 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r11|DWORD) condition: <  <||@
  Comment 128 38 CMP rax|DWORD y: 90 size: DWORD  <||@
  Comment 131 40 r11|DWORD = CMOVE (falseValue: int[90|0x5a], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 141 42 rax|DWORD = LEA [r11|DWORD + 128] size: DWORD  <||@
  Comment 148 44 rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 153 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@155f0b34 encoding: base: 0 shift: 3  <||@
  Comment 157 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@4acba0e1  <||@
  Comment 166 POLL_RETURN_NEAR  <||@
  Comment 173 block B6 null  <||@
  Comment 173 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 -1 r10|DWORD = MOVE input: int[-792491|0xfffffffffff3e855]  <||@
  Comment 179 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 179 block B7 null  <||@
  Comment 179 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 179 66 MOV (x: [r15|QWORD + 756], y: r10|DWORD) size: DWORD  <||@
  Comment 186 68 MOV [r15|QWORD + 768] y: 0 size: QWORD  <||@
  Comment 197 70 DEOPT info [bci:0]  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10a13dbe0, value=4509881150]:0x10ccf533e}  <||@
  Comment 202 [rdx:0]at org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:555) [bci: 0, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3 
     locals:  |Object[HotSpotOptimizedCallTarget@1871968556]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 203 block B5 null  <||@
  Comment 203 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 -1 r10|DWORD = MOVE input: int[-791979|0xfffffffffff3ea55]  <||@
  Comment 209 58 JUMP ~[] destination: B5 -> B7  <||@
  Comment 211 block B4 null  <||@
  Comment 211 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 -1 r10|DWORD = MOVE input: int[-792235|0xfffffffffff3e955]  <||@
  Comment 217 62 JUMP ~[] destination: B4 -> B7  <||@
  Comment 224 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10d158ba0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 224 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10a13dbd0, value=4509880896]:0x10ccf5240}  <||@
  Comment 230 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
